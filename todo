# General:
- (re)construct a file zone based on lib/Zone.pm6 object ;
	- use Match objects if ResourceRecord is not modified ;
	- a comment or a $[ttl|origin] are not of ResourceRecord, so .gen does not exists ;
- include some bind 9 directive ? ($INCLUDE, $TTL, $GENERATED, etc.)
- Two steps:
	- first step: syntax parsing and AST building ;
	- second step: semantic checks (domain name validity, TTL validity, etc.).

# Grammar:
- multiline entries have problems with parentheses count
	- an <rrSpace> rule shoud only increment or decrement the count if rule
		is valid ;
	- the count should be valid any time, because we need it for \n validity ;
- class names have to be insensitive (cname, CNAME, cName, etc.) ;
- special IPv4, like 0.0.0.0 ?
- empty lines
- error exception:
	- get line, reason, enventually continue the parsing of the other lines ;
- test with windows carriage return ;
- read user defined variable ($ttl)
- a valid line after a "comment line" can be invalid
- control entries ($ttl, $origin) (are case insensitive)
	- using :i 'ttl' for example, works, but I need to get the corresponding value

# Grammar action:
- for null values, get previous one (domain_name, ttl, class, …)
- check that soa name server is defined above
- unicode domain name to transcode to ASCII
- when parsing an empty domain name, there is some problems when creating the corresponding AST


# To check:
- In IPv6 rule : $<ipv4>.elems returns 0, $<ipv4><d8> returns 4, is it normal that $<ipv4>.elems returns 0 ?
- Some rules do not match if "use Grammar::Debugger" or "use Grammar::Tracer" are disabled ;
- in lib/Zone.pm6, « splice » has an strange comportement, depending it is used in OO way, or not.
